/* Auto-generated by create_boost_header.py for file /opt/ros/hydro/share/visualization_msgs/cmake/../msg/ImageMarker.msg */
#ifndef VISUALIZATION_MSGS_BOOST_SERIALIZATION_IMAGEMARKER_H
#define VISUALIZATION_MSGS_BOOST_SERIALIZATION_IMAGEMARKER_H

#include <boost/serialization/serialization.hpp>
#include <boost/serialization/nvp.hpp>
#include <visualization_msgs/ImageMarker.h>
#include <std_msgs/boost/Header.h>
#include <geometry_msgs/boost/Point.h>
#include <std_msgs/boost/ColorRGBA.h>
#include <std_msgs/boost/ColorRGBA.h>
#include <geometry_msgs/boost/Point.h>
#include <std_msgs/boost/ColorRGBA.h>

namespace boost
{
namespace serialization
{

template<class Archive, class ContainerAllocator>
void serialize(Archive& a,  ::visualization_msgs::ImageMarker_<ContainerAllocator>  & m, unsigned int)
{
    a & make_nvp("header",m.header);
    a & make_nvp("ns",m.ns);
    a & make_nvp("id",m.id);
    a & make_nvp("type",m.type);
    a & make_nvp("action",m.action);
    a & make_nvp("position",m.position);
    a & make_nvp("scale",m.scale);
    a & make_nvp("outline_color",m.outline_color);
    a & make_nvp("filled",m.filled);
    a & make_nvp("fill_color",m.fill_color);
    a & make_nvp("lifetime",m.lifetime);
    a & make_nvp("points",m.points);
    a & make_nvp("outline_colors",m.outline_colors);
}

} // namespace serialization
} // namespace boost

#endif // VISUALIZATION_MSGS_BOOST_SERIALIZATION_IMAGEMARKER_H

