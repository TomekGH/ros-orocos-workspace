/* Auto-generated by create_boost_header.py for file /opt/ros/hydro/share/sensor_msgs/cmake/../msg/MultiEchoLaserScan.msg */
#ifndef SENSOR_MSGS_BOOST_SERIALIZATION_MULTIECHOLASERSCAN_H
#define SENSOR_MSGS_BOOST_SERIALIZATION_MULTIECHOLASERSCAN_H

#include <boost/serialization/serialization.hpp>
#include <boost/serialization/nvp.hpp>
#include <sensor_msgs/MultiEchoLaserScan.h>
#include <std_msgs/boost/Header.h>
#include <sensor_msgs/boost/LaserEcho.h>
#include <sensor_msgs/boost/LaserEcho.h>

namespace boost
{
namespace serialization
{

template<class Archive, class ContainerAllocator>
void serialize(Archive& a,  ::sensor_msgs::MultiEchoLaserScan_<ContainerAllocator>  & m, unsigned int)
{
    a & make_nvp("header",m.header);
    a & make_nvp("angle_min",m.angle_min);
    a & make_nvp("angle_max",m.angle_max);
    a & make_nvp("angle_increment",m.angle_increment);
    a & make_nvp("time_increment",m.time_increment);
    a & make_nvp("scan_time",m.scan_time);
    a & make_nvp("range_min",m.range_min);
    a & make_nvp("range_max",m.range_max);
    a & make_nvp("ranges",m.ranges);
    a & make_nvp("intensities",m.intensities);
}

} // namespace serialization
} // namespace boost

#endif // SENSOR_MSGS_BOOST_SERIALIZATION_MULTIECHOLASERSCAN_H

