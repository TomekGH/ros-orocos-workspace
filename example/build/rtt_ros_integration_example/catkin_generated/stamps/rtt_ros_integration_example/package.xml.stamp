<package>
  <name>rtt_ros_integration_example</name>
  <version>2.6.0</version>
  <description>rtt_ros_integration_example provides a very basic example. A HelloRobot component with two input and two output ports is created. You can use 'rostopic echo/pub' to read from and write to them, e.g: rostopic pub /string_in std_msgs/String 'Hi, HelloRobot component'</description>
  <maintainer email="ruben.smits@mech.kuleuven.be">Ruben Smits</maintainer>

  <license>BSD</license>

  <url type="website">http://ros.org/wiki/rtt_ros_integration_example</url>
  <!-- <url type="bugtracker"></url> -->

  <author email="ruben.smits@mech.kuleuven.be">Ruben Smits</author>

  <buildtool_depend>catkin</buildtool_depend>

  <build_depend>rtt</build_depend> 
  <build_depend>rtt_ros</build_depend> 
  <build_depend>std_msgs</build_depend> 

  <run_depend>rtt</run_depend> 
  <run_depend>rtt_ros</run_depend> 
  <run_depend>rtt_rosnode</run_depend> 
  <run_depend>rtt_roscomm</run_depend> 
  <run_depend>rtt_rosparam</run_depend> 
  <run_depend>rtt_std_msgs</run_depend> 
  <run_depend>rtt_std_srvs</run_depend> 

  <export>
    <rtt_ros>
      <plugin_depend>rtt_rosnode</plugin_depend>
      <plugin_depend>rtt_roscomm</plugin_depend>
      <plugin_depend>rtt_rosparam</plugin_depend>
      <plugin_depend>rtt_std_msgs</plugin_depend>
      <plugin_depend>rtt_std_srvs</plugin_depend>
    </rtt_ros>
  </export>
</package>
